---
name: release-on-tag-creation
run-name: Creating a release on ${{ github.ref_name }} ${{ github.ref_type }}
on:
  push:
    tags:
      - "**"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Extract tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3

      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: fmt and lint
        env:
          TAG_NAME: ${{ steps.vars.outputs.tag }}
        run: |
          cargo fmt -- --check && cargo clippy -- -Dwarnings

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Extract tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run tests
        env:
          TAG_NAME: ${{ steps.vars.outputs.tag }}
        run: |
          cargo test # no tests at the moment

  build-x86-and-sign:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Extract tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Build bin-trash, bin-restore
        env:
          TAG_NAME: ${{ steps.vars.outputs.tag }}
        run: |
          # test
          # make build-lowest-glibc
          cargo build --release
          # uid = 1001, gid = 115 in github runners
          sudo chown 1001:115 target
          mkdir -p outputs
          cp ./target/release/trash ./outputs/trash-${TAG_NAME}-linux-x86_64
          cp ./target/release/restore ./outputs/restore-${TAG_NAME}-linux-x86_64

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Cosign version
        run: cosign version

      - name: Get cosign signing key
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
        run: |
          echo "${COSIGN_KEY}" > cosign.key

      - name: Sign the binary
        env:
          TAG_NAME: ${{ steps.vars.outputs.tag }}
        run: |
          cosign sign-blob --key cosign.key --yes outputs/trash-${TAG_NAME}-linux-x86_64 --output-signature outputs/trash-${TAG_NAME}-linux-x86_64.sig
          cosign sign-blob --key cosign.key --yes outputs/restore-${TAG_NAME}-linux-x86_64 --output-signature outputs/restore-${TAG_NAME}-linux-x86_64.sig

      - name: Upload build artefact - bin-trash
        uses: actions/upload-artifact@v3
        with:
          path: outputs/trash-${{ steps.vars.outputs.tag }}-linux-x86_64
          name: trash-${{ steps.vars.outputs.tag }}-linux-x86_64

      - name: Upload signature artefact - bin-trash
        uses: actions/upload-artifact@v3
        with:
          path: outputs/trash-${{ steps.vars.outputs.tag }}-linux-x86_64.sig
          name: trash-${{ steps.vars.outputs.tag }}-linux-x86_64.sig

      - name: Upload build artefact - bin-restore
        uses: actions/upload-artifact@v3
        with:
          path: outputs/restore-${{ steps.vars.outputs.tag }}-linux-x86_64
          name: restore-${{ steps.vars.outputs.tag }}-linux-x86_64

      - name: Upload signature artefact - bin-restore
        uses: actions/upload-artifact@v3
        with:
          path: outputs/restore-${{ steps.vars.outputs.tag }}-linux-x86_64.sig
          name: restore-${{ steps.vars.outputs.tag }}-linux-x86_64.sig

  release:
    runs-on: ubuntu-latest
    needs:
      - build-x86-and-sign
      # - build-armv7-and-sign
      # - dilligence
    permissions:
      contents: write
      actions: read

    steps:
      - uses: actions/checkout@v3

      - name: Extract tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      # trash
      - name: Download bin-trash build artifact
        uses: actions/download-artifact@v3
        with:
          name: trash-${{ steps.vars.outputs.tag }}-linux-x86_64

      - name: Download bin-trash signature artifact
        uses: actions/download-artifact@v3
        with:
          name: trash-${{ steps.vars.outputs.tag }}-linux-x86_64.sig

      # restore
      - name: Download bin-restore build artifact
        uses: actions/download-artifact@v3
        with:
          name: restore-${{ steps.vars.outputs.tag }}-linux-x86_64

      - name: Download bin-restore signature artifact
        uses: actions/download-artifact@v3
        with:
          name: restore-${{ steps.vars.outputs.tag }}-linux-x86_64.sig

      - name: Get cosign pub key
        env:
          COSIGN_PUB: ${{ secrets.COSIGN_PUB }}
          TAG_NAME: ${{ steps.vars.outputs.tag }}
        run: |
          echo "${COSIGN_PUB}" > cosign-${TAG_NAME}.pub

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          fail_on_unmatched_files: true
          name: Release ${{ steps.vars.outputs.tag }}
          body: |
            \<auto generated, will be replaced pretty soon with good stuff\>

            ## Verification
            The binaries are signed with [Sigstore Cosign](https://docs.sigstore.dev/main-concepts/). The public key
            is available in the release artefacts as `cosign-${{ steps.vars.outputs.tag }}.pub`.

            [Install `cosign`](https://docs.sigstore.dev/cosign/system_config/installation/) and use the following commands on Linux to verify the binaries and the images.

            ```bash
            # download the binary, signature, and the public key
            wget https://github.com/chamilad/trash-rs/releases/download/${{ steps.vars.outputs.tag }}/trash-${{ steps.vars.outputs.tag }}-linux-x86_64
            wget https://github.com/chamilad/trash-rs/releases/download/${{ steps.vars.outputs.tag }}/trash-${{ steps.vars.outputs.tag }}-linux-x86_64.sig
            wget https://github.com/chamilad/trash-rs/releases/download/${{ steps.vars.outputs.tag }}/restore-${{ steps.vars.outputs.tag }}-linux-x86_64
            wget https://github.com/chamilad/trash-rs/releases/download/${{ steps.vars.outputs.tag }}/restore-${{ steps.vars.outputs.tag }}-linux-x86_64.sig
            wget https://github.com/chamilad/trash-rs/releases/download/${{ steps.vars.outputs.tag }}/cosign-${{ steps.vars.outputs.tag }}.pub

            # verify the binary
            cosign verify-blob --key cosign-${{ steps.vars.outputs.tag }}.pub --signature trash-${{ steps.vars.outputs.tag }}-linux-x86_64.sig trash-${{ steps.vars.outputs.tag }}-linux-x86_64
            ```

            ## Usage
            Refer to the [README.md ](README.md) for the usage details.
          files: |
            trash-${{ steps.vars.outputs.tag }}-linux-x86_64
            trash-${{ steps.vars.outputs.tag }}-linux-x86_64.sig
            restore-${{ steps.vars.outputs.tag }}-linux-x86_64
            restore-${{ steps.vars.outputs.tag }}-linux-x86_64.sig
            cosign-${{ steps.vars.outputs.tag }}.pub
